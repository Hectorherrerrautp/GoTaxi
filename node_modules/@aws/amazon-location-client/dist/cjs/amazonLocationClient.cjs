
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

'use strict';

var clientLocation = require('@aws-sdk/client-location');
var credentialProviders = require('@aws-sdk/credential-providers');
var amazonLocationUtilitiesAuthHelper = require('@aws/amazon-location-utilities-auth-helper');
var clientGeoMaps = require('@aws-sdk/client-geo-maps');
var clientGeoPlaces = require('@aws-sdk/client-geo-places');
var clientGeoRoutes = require('@aws-sdk/client-geo-routes');

function _interopNamespaceDefault(e) {
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var clientGeoMaps__namespace = /*#__PURE__*/_interopNamespaceDefault(clientGeoMaps);
var clientGeoPlaces__namespace = /*#__PURE__*/_interopNamespaceDefault(clientGeoPlaces);
var clientGeoRoutes__namespace = /*#__PURE__*/_interopNamespaceDefault(clientGeoRoutes);



Object.defineProperty(exports, "withAPIKey", {
  enumerable: true,
  get: function () { return amazonLocationUtilitiesAuthHelper.withAPIKey; }
});
Object.defineProperty(exports, "withIdentityPoolId", {
  enumerable: true,
  get: function () { return amazonLocationUtilitiesAuthHelper.withIdentityPoolId; }
});
Object.defineProperty(exports, "GeoMapsClient", {
  enumerable: true,
  get: function () { return clientGeoMaps.GeoMapsClient; }
});
exports.maps = clientGeoMaps__namespace;
Object.defineProperty(exports, "GeoPlacesClient", {
  enumerable: true,
  get: function () { return clientGeoPlaces.GeoPlacesClient; }
});
exports.places = clientGeoPlaces__namespace;
Object.defineProperty(exports, "GeoRoutesClient", {
  enumerable: true,
  get: function () { return clientGeoRoutes.GeoRoutesClient; }
});
exports.routes = clientGeoRoutes__namespace;
Object.keys(clientLocation).forEach(function (k) {
  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {
    enumerable: true,
    get: function () { return clientLocation[k]; }
  });
});
Object.keys(credentialProviders).forEach(function (k) {
  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {
    enumerable: true,
    get: function () { return credentialProviders[k]; }
  });
});
