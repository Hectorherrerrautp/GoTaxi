import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { Uint8ArrayBlobAdapter } from "@smithy/util-stream";
import { GeoMapsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../GeoMapsClient";
import { GetGlyphsRequest, GetGlyphsResponse } from "../models/models_0";
/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link GetGlyphsCommand}.
 */
export interface GetGlyphsCommandInput extends GetGlyphsRequest {
}
/**
 * @public
 */
export type GetGlyphsCommandOutputType = Omit<GetGlyphsResponse, "Blob"> & {
    Blob?: Uint8ArrayBlobAdapter;
};
/**
 * @public
 *
 * The output of {@link GetGlyphsCommand}.
 */
export interface GetGlyphsCommandOutput extends GetGlyphsCommandOutputType, __MetadataBearer {
}
declare const GetGlyphsCommand_base: {
    new (input: GetGlyphsCommandInput): import("@smithy/smithy-client").CommandImpl<GetGlyphsCommandInput, GetGlyphsCommandOutput, GeoMapsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (input: GetGlyphsCommandInput): import("@smithy/smithy-client").CommandImpl<GetGlyphsCommandInput, GetGlyphsCommandOutput, GeoMapsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>
 *             <code>GetGlyphs</code> returns the map's glyphs.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { GeoMapsClient, GetGlyphsCommand } from "@aws-sdk/client-geo-maps"; // ES Modules import
 * // const { GeoMapsClient, GetGlyphsCommand } = require("@aws-sdk/client-geo-maps"); // CommonJS import
 * const client = new GeoMapsClient(config);
 * const input = { // GetGlyphsRequest
 *   FontStack: "STRING_VALUE", // required
 *   FontUnicodeRange: "STRING_VALUE", // required
 * };
 * const command = new GetGlyphsCommand(input);
 * const response = await client.send(command);
 * // { // GetGlyphsResponse
 * //   Blob: new Uint8Array(),
 * //   ContentType: "STRING_VALUE",
 * //   CacheControl: "STRING_VALUE",
 * //   ETag: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param GetGlyphsCommandInput - {@link GetGlyphsCommandInput}
 * @returns {@link GetGlyphsCommandOutput}
 * @see {@link GetGlyphsCommandInput} for command's `input` shape.
 * @see {@link GetGlyphsCommandOutput} for command's `response` shape.
 * @see {@link GeoMapsClientResolvedConfig | config} for GeoMapsClient's `config` shape.
 *
 * @throws {@link GeoMapsServiceException}
 * <p>Base exception class for all service exceptions from GeoMaps service.</p>
 *
 *
 * @public
 */
export declare class GetGlyphsCommand extends GetGlyphsCommand_base {
    /** @internal type navigation helper, not in runtime. */
    protected static __types: {
        api: {
            input: GetGlyphsRequest;
            output: GetGlyphsResponse;
        };
        sdk: {
            input: GetGlyphsCommandInput;
            output: GetGlyphsCommandOutput;
        };
    };
}
