import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { Uint8ArrayBlobAdapter } from "@smithy/util-stream";
import { GeoMapsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../GeoMapsClient";
import { GetStyleDescriptorRequest, GetStyleDescriptorResponse } from "../models/models_0";
/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link GetStyleDescriptorCommand}.
 */
export interface GetStyleDescriptorCommandInput extends GetStyleDescriptorRequest {
}
/**
 * @public
 */
export type GetStyleDescriptorCommandOutputType = Omit<GetStyleDescriptorResponse, "Blob"> & {
    Blob?: Uint8ArrayBlobAdapter;
};
/**
 * @public
 *
 * The output of {@link GetStyleDescriptorCommand}.
 */
export interface GetStyleDescriptorCommandOutput extends GetStyleDescriptorCommandOutputType, __MetadataBearer {
}
declare const GetStyleDescriptorCommand_base: {
    new (input: GetStyleDescriptorCommandInput): import("@smithy/smithy-client").CommandImpl<GetStyleDescriptorCommandInput, GetStyleDescriptorCommandOutput, GeoMapsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (input: GetStyleDescriptorCommandInput): import("@smithy/smithy-client").CommandImpl<GetStyleDescriptorCommandInput, GetStyleDescriptorCommandOutput, GeoMapsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>
 *             <code>GetStyleDescriptor</code> returns information about the style.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { GeoMapsClient, GetStyleDescriptorCommand } from "@aws-sdk/client-geo-maps"; // ES Modules import
 * // const { GeoMapsClient, GetStyleDescriptorCommand } = require("@aws-sdk/client-geo-maps"); // CommonJS import
 * const client = new GeoMapsClient(config);
 * const input = { // GetStyleDescriptorRequest
 *   Style: "STRING_VALUE", // required
 *   ColorScheme: "STRING_VALUE",
 *   PoliticalView: "STRING_VALUE",
 *   Key: "STRING_VALUE",
 * };
 * const command = new GetStyleDescriptorCommand(input);
 * const response = await client.send(command);
 * // { // GetStyleDescriptorResponse
 * //   Blob: new Uint8Array(),
 * //   ContentType: "STRING_VALUE",
 * //   CacheControl: "STRING_VALUE",
 * //   ETag: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param GetStyleDescriptorCommandInput - {@link GetStyleDescriptorCommandInput}
 * @returns {@link GetStyleDescriptorCommandOutput}
 * @see {@link GetStyleDescriptorCommandInput} for command's `input` shape.
 * @see {@link GetStyleDescriptorCommandOutput} for command's `response` shape.
 * @see {@link GeoMapsClientResolvedConfig | config} for GeoMapsClient's `config` shape.
 *
 * @throws {@link GeoMapsServiceException}
 * <p>Base exception class for all service exceptions from GeoMaps service.</p>
 *
 *
 * @public
 */
export declare class GetStyleDescriptorCommand extends GetStyleDescriptorCommand_base {
    /** @internal type navigation helper, not in runtime. */
    protected static __types: {
        api: {
            input: GetStyleDescriptorRequest;
            output: GetStyleDescriptorResponse;
        };
        sdk: {
            input: GetStyleDescriptorCommandInput;
            output: GetStyleDescriptorCommandOutput;
        };
    };
}
