import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { GeoMapsServiceException as __BaseException } from "./GeoMapsServiceException";
export class AccessDeniedException extends __BaseException {
    name = "AccessDeniedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export const ColorScheme = {
    DARK: "Dark",
    LIGHT: "Light",
};
export const MapStyle = {
    HYBRID: "Hybrid",
    MONOCHROME: "Monochrome",
    SATELLITE: "Satellite",
    STANDARD: "Standard",
};
export const Variant = {
    DEFAULT: "Default",
};
export const LabelSize = {
    LARGE: "Large",
    SMALL: "Small",
};
export const MapFeatureMode = {
    DISABLED: "Disabled",
    ENABLED: "Enabled",
};
export const ScaleBarUnit = {
    KILOMETERS: "Kilometers",
    KILOMETERS_MILES: "KilometersMiles",
    MILES: "Miles",
    MILES_KILOMETERS: "MilesKilometers",
};
export const StaticMapStyle = {
    SATELLITE: "Satellite",
    STANDARD: "Standard",
};
export class InternalServerException extends __BaseException {
    name = "InternalServerException";
    $fault = "server";
    $retryable = {};
    Message;
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.Message = opts.Message;
    }
}
export class ThrottlingException extends __BaseException {
    name = "ThrottlingException";
    $fault = "client";
    $retryable = {};
    Message;
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
export const ValidationExceptionReason = {
    CANNOT_PARSE: "CannotParse",
    FIELD_VALIDATION_FAILED: "FieldValidationFailed",
    MISSING: "Missing",
    OTHER: "Other",
    UNKNOWN_FIELD: "UnknownField",
    UNKNOWN_OPERATION: "UnknownOperation",
};
export class ValidationException extends __BaseException {
    name = "ValidationException";
    $fault = "client";
    Message;
    Reason;
    FieldList;
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.Message = opts.Message;
        this.Reason = opts.Reason;
        this.FieldList = opts.FieldList;
    }
}
export const GetStaticMapRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Key && { Key: SENSITIVE_STRING }),
});
export const GetStyleDescriptorRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Key && { Key: SENSITIVE_STRING }),
});
export const GetTileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Key && { Key: SENSITIVE_STRING }),
});
