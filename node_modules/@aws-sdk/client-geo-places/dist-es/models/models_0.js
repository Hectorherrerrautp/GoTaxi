import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { GeoPlacesServiceException as __BaseException } from "./GeoPlacesServiceException";
export class AccessDeniedException extends __BaseException {
    name = "AccessDeniedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export const TypePlacement = {
    AFTER_BASE_NAME: "AfterBaseName",
    BEFORE_BASE_NAME: "BeforeBaseName",
};
export const AutocompleteAdditionalFeature = {
    CORE: "Core",
};
export const AutocompleteFilterPlaceType = {
    LOCALITY: "Locality",
    POSTAL_CODE: "PostalCode",
};
export const AutocompleteIntendedUse = {
    SINGLE_USE: "SingleUse",
};
export const PostalCodeMode = {
    ENUMERATE_SPANNED_LOCALITIES: "EnumerateSpannedLocalities",
    MERGE_ALL_SPANNED_LOCALITIES: "MergeAllSpannedLocalities",
};
export const PlaceType = {
    BLOCK: "Block",
    COUNTRY: "Country",
    DISTRICT: "District",
    INTERPOLATED_ADDRESS: "InterpolatedAddress",
    INTERSECTION: "Intersection",
    LOCALITY: "Locality",
    POINT_ADDRESS: "PointAddress",
    POINT_OF_INTEREST: "PointOfInterest",
    POSTAL_CODE: "PostalCode",
    REGION: "Region",
    SECONDARY_ADDRESS: "SecondaryAddress",
    STREET: "Street",
    SUB_BLOCK: "SubBlock",
    SUB_DISTRICT: "SubDistrict",
    SUB_REGION: "SubRegion",
};
export class InternalServerException extends __BaseException {
    name = "InternalServerException";
    $fault = "server";
    $retryable = {};
    Message;
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.Message = opts.Message;
    }
}
export class ThrottlingException extends __BaseException {
    name = "ThrottlingException";
    $fault = "client";
    $retryable = {};
    Message;
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
export const ValidationExceptionReason = {
    CANNOT_PARSE: "CannotParse",
    FIELD_VALIDATION_FAILED: "FieldValidationFailed",
    MISSING: "Missing",
    OTHER: "Other",
    UNKNOWN_FIELD: "UnknownField",
    UNKNOWN_OPERATION: "UnknownOperation",
};
export class ValidationException extends __BaseException {
    name = "ValidationException";
    $fault = "client";
    Message;
    Reason;
    FieldList;
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.Message = opts.Message;
        this.Reason = opts.Reason;
        this.FieldList = opts.FieldList;
    }
}
export const GeocodeAdditionalFeature = {
    ACCESS: "Access",
    INTERSECTIONS: "Intersections",
    SECONDARY_ADDRESSES: "SecondaryAddresses",
    TIME_ZONE: "TimeZone",
};
export const GeocodeFilterPlaceType = {
    INTERPOLATED_ADDRESS: "InterpolatedAddress",
    INTERSECTION: "Intersection",
    LOCALITY: "Locality",
    POINT_ADDRESS: "PointAddress",
    POSTAL_CODE: "PostalCode",
    STREET: "Street",
};
export const GeocodeIntendedUse = {
    SINGLE_USE: "SingleUse",
    STORAGE: "Storage",
};
export const PostalAuthority = {
    USPS: "Usps",
};
export const PostalCodeType = {
    USPS_ZIP: "UspsZip",
    USPS_ZIP_PLUS_4: "UspsZipPlus4",
};
export const ZipClassificationCode = {
    MILITARY: "Military",
    POST_OFFICE_BOXES: "PostOfficeBoxes",
    UNIQUE: "Unique",
};
export const RecordTypeCode = {
    FIRM: "Firm",
    GENERAL: "General",
    HIGH_RISE: "HighRise",
    POST_OFFICE_BOX: "PostOfficeBox",
    RURAL: "Rural",
    STREET: "Street",
};
export const GetPlaceAdditionalFeature = {
    ACCESS: "Access",
    CONTACT: "Contact",
    PHONEMES: "Phonemes",
    SECONDARY_ADDRESSES: "SecondaryAddresses",
    TIME_ZONE: "TimeZone",
};
export const GetPlaceIntendedUse = {
    SINGLE_USE: "SingleUse",
    STORAGE: "Storage",
};
export const ReverseGeocodeAdditionalFeature = {
    ACCESS: "Access",
    INTERSECTIONS: "Intersections",
    TIME_ZONE: "TimeZone",
};
export const ReverseGeocodeFilterPlaceType = {
    INTERPOLATED_ADDRESS: "InterpolatedAddress",
    INTERSECTION: "Intersection",
    LOCALITY: "Locality",
    POINT_ADDRESS: "PointAddress",
    STREET: "Street",
};
export const ReverseGeocodeIntendedUse = {
    SINGLE_USE: "SingleUse",
    STORAGE: "Storage",
};
export const SearchNearbyAdditionalFeature = {
    ACCESS: "Access",
    CONTACT: "Contact",
    PHONEMES: "Phonemes",
    TIME_ZONE: "TimeZone",
};
export const SearchNearbyIntendedUse = {
    SINGLE_USE: "SingleUse",
    STORAGE: "Storage",
};
export const SearchTextAdditionalFeature = {
    ACCESS: "Access",
    CONTACT: "Contact",
    PHONEMES: "Phonemes",
    TIME_ZONE: "TimeZone",
};
export const SearchTextIntendedUse = {
    SINGLE_USE: "SingleUse",
    STORAGE: "Storage",
};
export const SuggestAdditionalFeature = {
    ACCESS: "Access",
    CORE: "Core",
    PHONEMES: "Phonemes",
    TIME_ZONE: "TimeZone",
};
export const SuggestIntendedUse = {
    SINGLE_USE: "SingleUse",
};
export const QueryType = {
    BUSINESS_CHAIN: "BusinessChain",
    CATEGORY: "Category",
};
export const SuggestResultItemType = {
    PLACE: "Place",
    QUERY: "Query",
};
export const AccessPointFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Position && { Position: SENSITIVE_STRING }),
});
export const CategoryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Id && { Id: SENSITIVE_STRING }),
    ...(obj.Name && { Name: SENSITIVE_STRING }),
    ...(obj.LocalizedName && { LocalizedName: SENSITIVE_STRING }),
    ...(obj.Primary && { Primary: SENSITIVE_STRING }),
});
export const AccessRestrictionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Restricted && { Restricted: SENSITIVE_STRING }),
    ...(obj.Categories && { Categories: obj.Categories.map((item) => CategoryFilterSensitiveLog(item)) }),
});
export const CountryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Code2 && { Code2: SENSITIVE_STRING }),
    ...(obj.Code3 && { Code3: SENSITIVE_STRING }),
    ...(obj.Name && { Name: SENSITIVE_STRING }),
});
export const RegionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Code && { Code: SENSITIVE_STRING }),
    ...(obj.Name && { Name: SENSITIVE_STRING }),
});
export const SecondaryAddressComponentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Number && { Number: SENSITIVE_STRING }),
});
export const StreetComponentsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.BaseName && { BaseName: SENSITIVE_STRING }),
    ...(obj.Type && { Type: SENSITIVE_STRING }),
    ...(obj.Prefix && { Prefix: SENSITIVE_STRING }),
    ...(obj.Suffix && { Suffix: SENSITIVE_STRING }),
    ...(obj.Direction && { Direction: SENSITIVE_STRING }),
});
export const SubRegionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Code && { Code: SENSITIVE_STRING }),
    ...(obj.Name && { Name: SENSITIVE_STRING }),
});
export const AddressFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Label && { Label: SENSITIVE_STRING }),
    ...(obj.Country && { Country: CountryFilterSensitiveLog(obj.Country) }),
    ...(obj.Region && { Region: RegionFilterSensitiveLog(obj.Region) }),
    ...(obj.SubRegion && { SubRegion: SubRegionFilterSensitiveLog(obj.SubRegion) }),
    ...(obj.Locality && { Locality: SENSITIVE_STRING }),
    ...(obj.District && { District: SENSITIVE_STRING }),
    ...(obj.SubDistrict && { SubDistrict: SENSITIVE_STRING }),
    ...(obj.PostalCode && { PostalCode: SENSITIVE_STRING }),
    ...(obj.Block && { Block: SENSITIVE_STRING }),
    ...(obj.SubBlock && { SubBlock: SENSITIVE_STRING }),
    ...(obj.Street && { Street: SENSITIVE_STRING }),
    ...(obj.StreetComponents && {
        StreetComponents: obj.StreetComponents.map((item) => StreetComponentsFilterSensitiveLog(item)),
    }),
    ...(obj.AddressNumber && { AddressNumber: SENSITIVE_STRING }),
    ...(obj.Building && { Building: SENSITIVE_STRING }),
    ...(obj.SecondaryAddressComponents && {
        SecondaryAddressComponents: obj.SecondaryAddressComponents.map((item) => SecondaryAddressComponentFilterSensitiveLog(item)),
    }),
});
export const PhonemeTranscriptionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Value && { Value: SENSITIVE_STRING }),
    ...(obj.Preferred && { Preferred: SENSITIVE_STRING }),
});
export const AddressComponentPhonemesFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Country && { Country: obj.Country.map((item) => PhonemeTranscriptionFilterSensitiveLog(item)) }),
    ...(obj.Region && { Region: obj.Region.map((item) => PhonemeTranscriptionFilterSensitiveLog(item)) }),
    ...(obj.SubRegion && { SubRegion: obj.SubRegion.map((item) => PhonemeTranscriptionFilterSensitiveLog(item)) }),
    ...(obj.Locality && { Locality: obj.Locality.map((item) => PhonemeTranscriptionFilterSensitiveLog(item)) }),
    ...(obj.District && { District: obj.District.map((item) => PhonemeTranscriptionFilterSensitiveLog(item)) }),
    ...(obj.SubDistrict && { SubDistrict: obj.SubDistrict.map((item) => PhonemeTranscriptionFilterSensitiveLog(item)) }),
    ...(obj.Block && { Block: obj.Block.map((item) => PhonemeTranscriptionFilterSensitiveLog(item)) }),
    ...(obj.SubBlock && { SubBlock: obj.SubBlock.map((item) => PhonemeTranscriptionFilterSensitiveLog(item)) }),
    ...(obj.Street && { Street: obj.Street.map((item) => PhonemeTranscriptionFilterSensitiveLog(item)) }),
});
export const FilterCircleFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Center && { Center: SENSITIVE_STRING }),
    ...(obj.Radius && { Radius: SENSITIVE_STRING }),
});
export const AutocompleteFilterFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.BoundingBox && { BoundingBox: SENSITIVE_STRING }),
    ...(obj.Circle && { Circle: SENSITIVE_STRING }),
    ...(obj.IncludeCountries && { IncludeCountries: SENSITIVE_STRING }),
});
export const AutocompleteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryText && { QueryText: SENSITIVE_STRING }),
    ...(obj.BiasPosition && { BiasPosition: SENSITIVE_STRING }),
    ...(obj.Filter && { Filter: AutocompleteFilterFilterSensitiveLog(obj.Filter) }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.Key && { Key: SENSITIVE_STRING }),
});
export const HighlightFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Value && { Value: SENSITIVE_STRING }),
});
export const CountryHighlightsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Code && { Code: obj.Code.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.Name && { Name: obj.Name.map((item) => HighlightFilterSensitiveLog(item)) }),
});
export const RegionHighlightsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Code && { Code: obj.Code.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.Name && { Name: obj.Name.map((item) => HighlightFilterSensitiveLog(item)) }),
});
export const SubRegionHighlightsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Code && { Code: obj.Code.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.Name && { Name: obj.Name.map((item) => HighlightFilterSensitiveLog(item)) }),
});
export const AutocompleteAddressHighlightsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Label && { Label: obj.Label.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.Country && { Country: CountryHighlightsFilterSensitiveLog(obj.Country) }),
    ...(obj.Region && { Region: RegionHighlightsFilterSensitiveLog(obj.Region) }),
    ...(obj.SubRegion && { SubRegion: SubRegionHighlightsFilterSensitiveLog(obj.SubRegion) }),
    ...(obj.Locality && { Locality: obj.Locality.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.District && { District: obj.District.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.SubDistrict && { SubDistrict: obj.SubDistrict.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.Street && { Street: obj.Street.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.Block && { Block: obj.Block.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.SubBlock && { SubBlock: obj.SubBlock.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.Intersection && {
        Intersection: obj.Intersection.map((item) => item.map((item) => HighlightFilterSensitiveLog(item))),
    }),
    ...(obj.PostalCode && { PostalCode: obj.PostalCode.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.AddressNumber && { AddressNumber: obj.AddressNumber.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.Building && { Building: obj.Building.map((item) => HighlightFilterSensitiveLog(item)) }),
});
export const AutocompleteHighlightsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Title && { Title: obj.Title.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.Address && { Address: AutocompleteAddressHighlightsFilterSensitiveLog(obj.Address) }),
});
export const AutocompleteResultItemFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PlaceId && { PlaceId: SENSITIVE_STRING }),
    ...(obj.PlaceType && { PlaceType: SENSITIVE_STRING }),
    ...(obj.Title && { Title: SENSITIVE_STRING }),
    ...(obj.Address && { Address: AddressFilterSensitiveLog(obj.Address) }),
    ...(obj.Distance && { Distance: SENSITIVE_STRING }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.Highlights && { Highlights: AutocompleteHighlightsFilterSensitiveLog(obj.Highlights) }),
});
export const AutocompleteResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResultItems && {
        ResultItems: obj.ResultItems.map((item) => AutocompleteResultItemFilterSensitiveLog(item)),
    }),
});
export const BusinessChainFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Name && { Name: SENSITIVE_STRING }),
    ...(obj.Id && { Id: SENSITIVE_STRING }),
});
export const ContactDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Label && { Label: SENSITIVE_STRING }),
    ...(obj.Value && { Value: SENSITIVE_STRING }),
    ...(obj.Categories && { Categories: obj.Categories.map((item) => CategoryFilterSensitiveLog(item)) }),
});
export const ContactsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Phones && { Phones: obj.Phones.map((item) => ContactDetailsFilterSensitiveLog(item)) }),
    ...(obj.Faxes && { Faxes: obj.Faxes.map((item) => ContactDetailsFilterSensitiveLog(item)) }),
    ...(obj.Websites && { Websites: obj.Websites.map((item) => ContactDetailsFilterSensitiveLog(item)) }),
    ...(obj.Emails && { Emails: obj.Emails.map((item) => ContactDetailsFilterSensitiveLog(item)) }),
});
export const FoodTypeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.LocalizedName && { LocalizedName: SENSITIVE_STRING }),
    ...(obj.Id && { Id: SENSITIVE_STRING }),
    ...(obj.Primary && { Primary: SENSITIVE_STRING }),
});
export const GeocodeFilterFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.IncludeCountries && { IncludeCountries: SENSITIVE_STRING }),
    ...(obj.IncludePlaceTypes && { IncludePlaceTypes: SENSITIVE_STRING }),
});
export const GeocodeQueryComponentsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Country && { Country: SENSITIVE_STRING }),
    ...(obj.Region && { Region: SENSITIVE_STRING }),
    ...(obj.SubRegion && { SubRegion: SENSITIVE_STRING }),
    ...(obj.Locality && { Locality: SENSITIVE_STRING }),
    ...(obj.District && { District: SENSITIVE_STRING }),
    ...(obj.Street && { Street: SENSITIVE_STRING }),
    ...(obj.AddressNumber && { AddressNumber: SENSITIVE_STRING }),
    ...(obj.PostalCode && { PostalCode: SENSITIVE_STRING }),
});
export const GeocodeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryText && { QueryText: SENSITIVE_STRING }),
    ...(obj.QueryComponents && { QueryComponents: GeocodeQueryComponentsFilterSensitiveLog(obj.QueryComponents) }),
    ...(obj.BiasPosition && { BiasPosition: SENSITIVE_STRING }),
    ...(obj.Filter && { Filter: GeocodeFilterFilterSensitiveLog(obj.Filter) }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.Key && { Key: SENSITIVE_STRING }),
});
export const IntersectionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PlaceId && { PlaceId: SENSITIVE_STRING }),
    ...(obj.Title && { Title: SENSITIVE_STRING }),
    ...(obj.Address && { Address: AddressFilterSensitiveLog(obj.Address) }),
    ...(obj.Position && { Position: SENSITIVE_STRING }),
    ...(obj.Distance && { Distance: SENSITIVE_STRING }),
    ...(obj.RouteDistance && { RouteDistance: SENSITIVE_STRING }),
    ...(obj.MapView && { MapView: SENSITIVE_STRING }),
    ...(obj.AccessPoints && { AccessPoints: obj.AccessPoints.map((item) => AccessPointFilterSensitiveLog(item)) }),
});
export const RelatedPlaceFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PlaceId && { PlaceId: SENSITIVE_STRING }),
    ...(obj.PlaceType && { PlaceType: SENSITIVE_STRING }),
    ...(obj.Title && { Title: SENSITIVE_STRING }),
    ...(obj.Address && { Address: AddressFilterSensitiveLog(obj.Address) }),
    ...(obj.Position && { Position: SENSITIVE_STRING }),
    ...(obj.AccessPoints && { AccessPoints: obj.AccessPoints.map((item) => AccessPointFilterSensitiveLog(item)) }),
});
export const ParsedQueryComponentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Value && { Value: SENSITIVE_STRING }),
    ...(obj.QueryComponent && { QueryComponent: SENSITIVE_STRING }),
});
export const ParsedQuerySecondaryAddressComponentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Value && { Value: SENSITIVE_STRING }),
    ...(obj.Number && { Number: SENSITIVE_STRING }),
    ...(obj.Designator && { Designator: SENSITIVE_STRING }),
});
export const GeocodeParsedQueryAddressComponentsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Country && { Country: obj.Country.map((item) => ParsedQueryComponentFilterSensitiveLog(item)) }),
    ...(obj.Region && { Region: obj.Region.map((item) => ParsedQueryComponentFilterSensitiveLog(item)) }),
    ...(obj.SubRegion && { SubRegion: obj.SubRegion.map((item) => ParsedQueryComponentFilterSensitiveLog(item)) }),
    ...(obj.Locality && { Locality: obj.Locality.map((item) => ParsedQueryComponentFilterSensitiveLog(item)) }),
    ...(obj.District && { District: obj.District.map((item) => ParsedQueryComponentFilterSensitiveLog(item)) }),
    ...(obj.SubDistrict && { SubDistrict: obj.SubDistrict.map((item) => ParsedQueryComponentFilterSensitiveLog(item)) }),
    ...(obj.PostalCode && { PostalCode: obj.PostalCode.map((item) => ParsedQueryComponentFilterSensitiveLog(item)) }),
    ...(obj.Block && { Block: obj.Block.map((item) => ParsedQueryComponentFilterSensitiveLog(item)) }),
    ...(obj.SubBlock && { SubBlock: obj.SubBlock.map((item) => ParsedQueryComponentFilterSensitiveLog(item)) }),
    ...(obj.Street && { Street: obj.Street.map((item) => ParsedQueryComponentFilterSensitiveLog(item)) }),
    ...(obj.AddressNumber && {
        AddressNumber: obj.AddressNumber.map((item) => ParsedQueryComponentFilterSensitiveLog(item)),
    }),
    ...(obj.Building && { Building: obj.Building.map((item) => ParsedQueryComponentFilterSensitiveLog(item)) }),
    ...(obj.SecondaryAddressComponents && {
        SecondaryAddressComponents: obj.SecondaryAddressComponents.map((item) => ParsedQuerySecondaryAddressComponentFilterSensitiveLog(item)),
    }),
});
export const GeocodeParsedQueryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Title && { Title: obj.Title.map((item) => ParsedQueryComponentFilterSensitiveLog(item)) }),
    ...(obj.Address && { Address: GeocodeParsedQueryAddressComponentsFilterSensitiveLog(obj.Address) }),
});
export const UspsZipFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ZipClassificationCode && { ZipClassificationCode: SENSITIVE_STRING }),
});
export const UspsZipPlus4FilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RecordTypeCode && { RecordTypeCode: SENSITIVE_STRING }),
});
export const PostalCodeDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PostalCode && { PostalCode: SENSITIVE_STRING }),
    ...(obj.PostalAuthority && { PostalAuthority: SENSITIVE_STRING }),
    ...(obj.PostalCodeType && { PostalCodeType: SENSITIVE_STRING }),
    ...(obj.UspsZip && { UspsZip: UspsZipFilterSensitiveLog(obj.UspsZip) }),
    ...(obj.UspsZipPlus4 && { UspsZipPlus4: UspsZipPlus4FilterSensitiveLog(obj.UspsZipPlus4) }),
});
export const TimeZoneFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Name && { Name: SENSITIVE_STRING }),
    ...(obj.Offset && { Offset: SENSITIVE_STRING }),
    ...(obj.OffsetSeconds && { OffsetSeconds: SENSITIVE_STRING }),
});
export const GeocodeResultItemFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PlaceId && { PlaceId: SENSITIVE_STRING }),
    ...(obj.PlaceType && { PlaceType: SENSITIVE_STRING }),
    ...(obj.Title && { Title: SENSITIVE_STRING }),
    ...(obj.Address && { Address: AddressFilterSensitiveLog(obj.Address) }),
    ...(obj.AddressNumberCorrected && { AddressNumberCorrected: SENSITIVE_STRING }),
    ...(obj.PostalCodeDetails && {
        PostalCodeDetails: obj.PostalCodeDetails.map((item) => PostalCodeDetailsFilterSensitiveLog(item)),
    }),
    ...(obj.Position && { Position: SENSITIVE_STRING }),
    ...(obj.Distance && { Distance: SENSITIVE_STRING }),
    ...(obj.MapView && { MapView: SENSITIVE_STRING }),
    ...(obj.Categories && { Categories: obj.Categories.map((item) => CategoryFilterSensitiveLog(item)) }),
    ...(obj.FoodTypes && { FoodTypes: obj.FoodTypes.map((item) => FoodTypeFilterSensitiveLog(item)) }),
    ...(obj.AccessPoints && { AccessPoints: obj.AccessPoints.map((item) => AccessPointFilterSensitiveLog(item)) }),
    ...(obj.TimeZone && { TimeZone: TimeZoneFilterSensitiveLog(obj.TimeZone) }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.ParsedQuery && { ParsedQuery: GeocodeParsedQueryFilterSensitiveLog(obj.ParsedQuery) }),
    ...(obj.Intersections && { Intersections: obj.Intersections.map((item) => IntersectionFilterSensitiveLog(item)) }),
    ...(obj.MainAddress && { MainAddress: RelatedPlaceFilterSensitiveLog(obj.MainAddress) }),
    ...(obj.SecondaryAddresses && {
        SecondaryAddresses: obj.SecondaryAddresses.map((item) => RelatedPlaceFilterSensitiveLog(item)),
    }),
});
export const GeocodeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResultItems && { ResultItems: obj.ResultItems.map((item) => GeocodeResultItemFilterSensitiveLog(item)) }),
});
export const GetPlaceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PlaceId && { PlaceId: SENSITIVE_STRING }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.Key && { Key: SENSITIVE_STRING }),
});
export const OpeningHoursComponentsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.OpenTime && { OpenTime: SENSITIVE_STRING }),
    ...(obj.OpenDuration && { OpenDuration: SENSITIVE_STRING }),
    ...(obj.Recurrence && { Recurrence: SENSITIVE_STRING }),
});
export const OpeningHoursFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Display && { Display: SENSITIVE_STRING }),
    ...(obj.OpenNow && { OpenNow: SENSITIVE_STRING }),
    ...(obj.Components && { Components: obj.Components.map((item) => OpeningHoursComponentsFilterSensitiveLog(item)) }),
    ...(obj.Categories && { Categories: obj.Categories.map((item) => CategoryFilterSensitiveLog(item)) }),
});
export const PhonemeDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Title && { Title: obj.Title.map((item) => PhonemeTranscriptionFilterSensitiveLog(item)) }),
    ...(obj.Address && { Address: AddressComponentPhonemesFilterSensitiveLog(obj.Address) }),
});
export const GetPlaceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PlaceId && { PlaceId: SENSITIVE_STRING }),
    ...(obj.PlaceType && { PlaceType: SENSITIVE_STRING }),
    ...(obj.Title && { Title: SENSITIVE_STRING }),
    ...(obj.Address && { Address: AddressFilterSensitiveLog(obj.Address) }),
    ...(obj.AddressNumberCorrected && { AddressNumberCorrected: SENSITIVE_STRING }),
    ...(obj.PostalCodeDetails && {
        PostalCodeDetails: obj.PostalCodeDetails.map((item) => PostalCodeDetailsFilterSensitiveLog(item)),
    }),
    ...(obj.Position && { Position: SENSITIVE_STRING }),
    ...(obj.MapView && { MapView: SENSITIVE_STRING }),
    ...(obj.Categories && { Categories: obj.Categories.map((item) => CategoryFilterSensitiveLog(item)) }),
    ...(obj.FoodTypes && { FoodTypes: obj.FoodTypes.map((item) => FoodTypeFilterSensitiveLog(item)) }),
    ...(obj.BusinessChains && {
        BusinessChains: obj.BusinessChains.map((item) => BusinessChainFilterSensitiveLog(item)),
    }),
    ...(obj.Contacts && { Contacts: ContactsFilterSensitiveLog(obj.Contacts) }),
    ...(obj.OpeningHours && { OpeningHours: obj.OpeningHours.map((item) => OpeningHoursFilterSensitiveLog(item)) }),
    ...(obj.AccessPoints && { AccessPoints: obj.AccessPoints.map((item) => AccessPointFilterSensitiveLog(item)) }),
    ...(obj.AccessRestrictions && {
        AccessRestrictions: obj.AccessRestrictions.map((item) => AccessRestrictionFilterSensitiveLog(item)),
    }),
    ...(obj.TimeZone && { TimeZone: TimeZoneFilterSensitiveLog(obj.TimeZone) }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.Phonemes && { Phonemes: PhonemeDetailsFilterSensitiveLog(obj.Phonemes) }),
    ...(obj.MainAddress && { MainAddress: RelatedPlaceFilterSensitiveLog(obj.MainAddress) }),
    ...(obj.SecondaryAddresses && {
        SecondaryAddresses: obj.SecondaryAddresses.map((item) => RelatedPlaceFilterSensitiveLog(item)),
    }),
});
export const ReverseGeocodeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryPosition && { QueryPosition: SENSITIVE_STRING }),
    ...(obj.QueryRadius && { QueryRadius: SENSITIVE_STRING }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.Key && { Key: SENSITIVE_STRING }),
});
export const ReverseGeocodeResultItemFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PlaceId && { PlaceId: SENSITIVE_STRING }),
    ...(obj.PlaceType && { PlaceType: SENSITIVE_STRING }),
    ...(obj.Title && { Title: SENSITIVE_STRING }),
    ...(obj.Address && { Address: AddressFilterSensitiveLog(obj.Address) }),
    ...(obj.AddressNumberCorrected && { AddressNumberCorrected: SENSITIVE_STRING }),
    ...(obj.PostalCodeDetails && {
        PostalCodeDetails: obj.PostalCodeDetails.map((item) => PostalCodeDetailsFilterSensitiveLog(item)),
    }),
    ...(obj.Position && { Position: SENSITIVE_STRING }),
    ...(obj.Distance && { Distance: SENSITIVE_STRING }),
    ...(obj.MapView && { MapView: SENSITIVE_STRING }),
    ...(obj.Categories && { Categories: obj.Categories.map((item) => CategoryFilterSensitiveLog(item)) }),
    ...(obj.FoodTypes && { FoodTypes: obj.FoodTypes.map((item) => FoodTypeFilterSensitiveLog(item)) }),
    ...(obj.AccessPoints && { AccessPoints: obj.AccessPoints.map((item) => AccessPointFilterSensitiveLog(item)) }),
    ...(obj.TimeZone && { TimeZone: TimeZoneFilterSensitiveLog(obj.TimeZone) }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.Intersections && { Intersections: obj.Intersections.map((item) => IntersectionFilterSensitiveLog(item)) }),
});
export const ReverseGeocodeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResultItems && {
        ResultItems: obj.ResultItems.map((item) => ReverseGeocodeResultItemFilterSensitiveLog(item)),
    }),
});
export const SearchNearbyFilterFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.BoundingBox && { BoundingBox: SENSITIVE_STRING }),
    ...(obj.IncludeCountries && { IncludeCountries: SENSITIVE_STRING }),
    ...(obj.IncludeCategories && { IncludeCategories: SENSITIVE_STRING }),
    ...(obj.ExcludeCategories && { ExcludeCategories: SENSITIVE_STRING }),
    ...(obj.IncludeBusinessChains && { IncludeBusinessChains: SENSITIVE_STRING }),
    ...(obj.ExcludeBusinessChains && { ExcludeBusinessChains: SENSITIVE_STRING }),
    ...(obj.IncludeFoodTypes && { IncludeFoodTypes: SENSITIVE_STRING }),
    ...(obj.ExcludeFoodTypes && { ExcludeFoodTypes: SENSITIVE_STRING }),
});
export const SearchNearbyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryPosition && { QueryPosition: SENSITIVE_STRING }),
    ...(obj.QueryRadius && { QueryRadius: SENSITIVE_STRING }),
    ...(obj.Filter && { Filter: SearchNearbyFilterFilterSensitiveLog(obj.Filter) }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.Key && { Key: SENSITIVE_STRING }),
});
export const SearchNearbyResultItemFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PlaceId && { PlaceId: SENSITIVE_STRING }),
    ...(obj.PlaceType && { PlaceType: SENSITIVE_STRING }),
    ...(obj.Title && { Title: SENSITIVE_STRING }),
    ...(obj.Address && { Address: AddressFilterSensitiveLog(obj.Address) }),
    ...(obj.AddressNumberCorrected && { AddressNumberCorrected: SENSITIVE_STRING }),
    ...(obj.Position && { Position: SENSITIVE_STRING }),
    ...(obj.Distance && { Distance: SENSITIVE_STRING }),
    ...(obj.MapView && { MapView: SENSITIVE_STRING }),
    ...(obj.Categories && { Categories: obj.Categories.map((item) => CategoryFilterSensitiveLog(item)) }),
    ...(obj.FoodTypes && { FoodTypes: obj.FoodTypes.map((item) => FoodTypeFilterSensitiveLog(item)) }),
    ...(obj.BusinessChains && {
        BusinessChains: obj.BusinessChains.map((item) => BusinessChainFilterSensitiveLog(item)),
    }),
    ...(obj.Contacts && { Contacts: ContactsFilterSensitiveLog(obj.Contacts) }),
    ...(obj.OpeningHours && { OpeningHours: obj.OpeningHours.map((item) => OpeningHoursFilterSensitiveLog(item)) }),
    ...(obj.AccessPoints && { AccessPoints: obj.AccessPoints.map((item) => AccessPointFilterSensitiveLog(item)) }),
    ...(obj.AccessRestrictions && {
        AccessRestrictions: obj.AccessRestrictions.map((item) => AccessRestrictionFilterSensitiveLog(item)),
    }),
    ...(obj.TimeZone && { TimeZone: TimeZoneFilterSensitiveLog(obj.TimeZone) }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.Phonemes && { Phonemes: PhonemeDetailsFilterSensitiveLog(obj.Phonemes) }),
});
export const SearchNearbyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResultItems && {
        ResultItems: obj.ResultItems.map((item) => SearchNearbyResultItemFilterSensitiveLog(item)),
    }),
});
export const SearchTextFilterFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.BoundingBox && { BoundingBox: SENSITIVE_STRING }),
    ...(obj.Circle && { Circle: SENSITIVE_STRING }),
    ...(obj.IncludeCountries && { IncludeCountries: SENSITIVE_STRING }),
});
export const SearchTextRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryText && { QueryText: SENSITIVE_STRING }),
    ...(obj.QueryId && { QueryId: SENSITIVE_STRING }),
    ...(obj.BiasPosition && { BiasPosition: SENSITIVE_STRING }),
    ...(obj.Filter && { Filter: SearchTextFilterFilterSensitiveLog(obj.Filter) }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.Key && { Key: SENSITIVE_STRING }),
});
export const SearchTextResultItemFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PlaceId && { PlaceId: SENSITIVE_STRING }),
    ...(obj.PlaceType && { PlaceType: SENSITIVE_STRING }),
    ...(obj.Title && { Title: SENSITIVE_STRING }),
    ...(obj.Address && { Address: AddressFilterSensitiveLog(obj.Address) }),
    ...(obj.AddressNumberCorrected && { AddressNumberCorrected: SENSITIVE_STRING }),
    ...(obj.Position && { Position: SENSITIVE_STRING }),
    ...(obj.Distance && { Distance: SENSITIVE_STRING }),
    ...(obj.MapView && { MapView: SENSITIVE_STRING }),
    ...(obj.Categories && { Categories: obj.Categories.map((item) => CategoryFilterSensitiveLog(item)) }),
    ...(obj.FoodTypes && { FoodTypes: obj.FoodTypes.map((item) => FoodTypeFilterSensitiveLog(item)) }),
    ...(obj.BusinessChains && {
        BusinessChains: obj.BusinessChains.map((item) => BusinessChainFilterSensitiveLog(item)),
    }),
    ...(obj.Contacts && { Contacts: ContactsFilterSensitiveLog(obj.Contacts) }),
    ...(obj.OpeningHours && { OpeningHours: obj.OpeningHours.map((item) => OpeningHoursFilterSensitiveLog(item)) }),
    ...(obj.AccessPoints && { AccessPoints: obj.AccessPoints.map((item) => AccessPointFilterSensitiveLog(item)) }),
    ...(obj.AccessRestrictions && {
        AccessRestrictions: obj.AccessRestrictions.map((item) => AccessRestrictionFilterSensitiveLog(item)),
    }),
    ...(obj.TimeZone && { TimeZone: TimeZoneFilterSensitiveLog(obj.TimeZone) }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.Phonemes && { Phonemes: PhonemeDetailsFilterSensitiveLog(obj.Phonemes) }),
});
export const SearchTextResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResultItems && { ResultItems: obj.ResultItems.map((item) => SearchTextResultItemFilterSensitiveLog(item)) }),
});
export const SuggestFilterFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.BoundingBox && { BoundingBox: SENSITIVE_STRING }),
    ...(obj.Circle && { Circle: SENSITIVE_STRING }),
    ...(obj.IncludeCountries && { IncludeCountries: SENSITIVE_STRING }),
});
export const SuggestRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryText && { QueryText: SENSITIVE_STRING }),
    ...(obj.BiasPosition && { BiasPosition: SENSITIVE_STRING }),
    ...(obj.Filter && { Filter: SuggestFilterFilterSensitiveLog(obj.Filter) }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.Key && { Key: SENSITIVE_STRING }),
});
export const QueryRefinementFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RefinedTerm && { RefinedTerm: SENSITIVE_STRING }),
    ...(obj.OriginalTerm && { OriginalTerm: SENSITIVE_STRING }),
});
export const SuggestAddressHighlightsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Label && { Label: obj.Label.map((item) => HighlightFilterSensitiveLog(item)) }),
});
export const SuggestHighlightsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Title && { Title: obj.Title.map((item) => HighlightFilterSensitiveLog(item)) }),
    ...(obj.Address && { Address: SuggestAddressHighlightsFilterSensitiveLog(obj.Address) }),
});
export const SuggestPlaceResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PlaceId && { PlaceId: SENSITIVE_STRING }),
    ...(obj.PlaceType && { PlaceType: SENSITIVE_STRING }),
    ...(obj.Address && { Address: AddressFilterSensitiveLog(obj.Address) }),
    ...(obj.Position && { Position: SENSITIVE_STRING }),
    ...(obj.Distance && { Distance: SENSITIVE_STRING }),
    ...(obj.MapView && { MapView: SENSITIVE_STRING }),
    ...(obj.Categories && { Categories: obj.Categories.map((item) => CategoryFilterSensitiveLog(item)) }),
    ...(obj.FoodTypes && { FoodTypes: obj.FoodTypes.map((item) => FoodTypeFilterSensitiveLog(item)) }),
    ...(obj.BusinessChains && {
        BusinessChains: obj.BusinessChains.map((item) => BusinessChainFilterSensitiveLog(item)),
    }),
    ...(obj.AccessPoints && { AccessPoints: obj.AccessPoints.map((item) => AccessPointFilterSensitiveLog(item)) }),
    ...(obj.AccessRestrictions && {
        AccessRestrictions: obj.AccessRestrictions.map((item) => AccessRestrictionFilterSensitiveLog(item)),
    }),
    ...(obj.TimeZone && { TimeZone: TimeZoneFilterSensitiveLog(obj.TimeZone) }),
    ...(obj.PoliticalView && { PoliticalView: SENSITIVE_STRING }),
    ...(obj.Phonemes && { Phonemes: PhonemeDetailsFilterSensitiveLog(obj.Phonemes) }),
});
export const SuggestQueryResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.QueryId && { QueryId: SENSITIVE_STRING }),
});
export const SuggestResultItemFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Title && { Title: SENSITIVE_STRING }),
    ...(obj.Place && { Place: SuggestPlaceResultFilterSensitiveLog(obj.Place) }),
    ...(obj.Query && { Query: SuggestQueryResultFilterSensitiveLog(obj.Query) }),
    ...(obj.Highlights && { Highlights: SuggestHighlightsFilterSensitiveLog(obj.Highlights) }),
});
export const SuggestResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResultItems && { ResultItems: obj.ResultItems.map((item) => SuggestResultItemFilterSensitiveLog(item)) }),
    ...(obj.QueryRefinements && {
        QueryRefinements: obj.QueryRefinements.map((item) => QueryRefinementFilterSensitiveLog(item)),
    }),
});
