import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { GeoPlacesServiceException as __BaseException } from "./GeoPlacesServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface AccessPoint {
  Position?: number[] | undefined;
}
export interface Category {
  Id: string | undefined;
  Name: string | undefined;
  LocalizedName?: string | undefined;
  Primary?: boolean | undefined;
}
export interface AccessRestriction {
  Restricted?: boolean | undefined;
  Categories?: Category[] | undefined;
}
export interface Country {
  Code2?: string | undefined;
  Code3?: string | undefined;
  Name?: string | undefined;
}
export interface Region {
  Code?: string | undefined;
  Name?: string | undefined;
}
export interface SecondaryAddressComponent {
  Number: string | undefined;
}
export declare const TypePlacement: {
  readonly AFTER_BASE_NAME: "AfterBaseName";
  readonly BEFORE_BASE_NAME: "BeforeBaseName";
};
export type TypePlacement = (typeof TypePlacement)[keyof typeof TypePlacement];
export interface StreetComponents {
  BaseName?: string | undefined;
  Type?: string | undefined;
  TypePlacement?: TypePlacement | undefined;
  TypeSeparator?: string | undefined;
  Prefix?: string | undefined;
  Suffix?: string | undefined;
  Direction?: string | undefined;
  Language?: string | undefined;
}
export interface SubRegion {
  Code?: string | undefined;
  Name?: string | undefined;
}
export interface Address {
  Label?: string | undefined;
  Country?: Country | undefined;
  Region?: Region | undefined;
  SubRegion?: SubRegion | undefined;
  Locality?: string | undefined;
  District?: string | undefined;
  SubDistrict?: string | undefined;
  PostalCode?: string | undefined;
  Block?: string | undefined;
  SubBlock?: string | undefined;
  Intersection?: string[] | undefined;
  Street?: string | undefined;
  StreetComponents?: StreetComponents[] | undefined;
  AddressNumber?: string | undefined;
  Building?: string | undefined;
  SecondaryAddressComponents?: SecondaryAddressComponent[] | undefined;
}
export interface SecondaryAddressComponentMatchScore {
  Number?: number | undefined;
}
export interface AddressComponentMatchScores {
  Country?: number | undefined;
  Region?: number | undefined;
  SubRegion?: number | undefined;
  Locality?: number | undefined;
  District?: number | undefined;
  SubDistrict?: number | undefined;
  PostalCode?: number | undefined;
  Block?: number | undefined;
  SubBlock?: number | undefined;
  Intersection?: number[] | undefined;
  AddressNumber?: number | undefined;
  Building?: number | undefined;
  SecondaryAddressComponents?:
    | SecondaryAddressComponentMatchScore[]
    | undefined;
}
export interface PhonemeTranscription {
  Value?: string | undefined;
  Language?: string | undefined;
  Preferred?: boolean | undefined;
}
export interface AddressComponentPhonemes {
  Country?: PhonemeTranscription[] | undefined;
  Region?: PhonemeTranscription[] | undefined;
  SubRegion?: PhonemeTranscription[] | undefined;
  Locality?: PhonemeTranscription[] | undefined;
  District?: PhonemeTranscription[] | undefined;
  SubDistrict?: PhonemeTranscription[] | undefined;
  Block?: PhonemeTranscription[] | undefined;
  SubBlock?: PhonemeTranscription[] | undefined;
  Street?: PhonemeTranscription[] | undefined;
}
export declare const AutocompleteAdditionalFeature: {
  readonly CORE: "Core";
};
export type AutocompleteAdditionalFeature =
  (typeof AutocompleteAdditionalFeature)[keyof typeof AutocompleteAdditionalFeature];
export interface FilterCircle {
  Center: number[] | undefined;
  Radius: number | undefined;
}
export declare const AutocompleteFilterPlaceType: {
  readonly LOCALITY: "Locality";
  readonly POSTAL_CODE: "PostalCode";
};
export type AutocompleteFilterPlaceType =
  (typeof AutocompleteFilterPlaceType)[keyof typeof AutocompleteFilterPlaceType];
export interface AutocompleteFilter {
  BoundingBox?: number[] | undefined;
  Circle?: FilterCircle | undefined;
  IncludeCountries?: string[] | undefined;
  IncludePlaceTypes?: AutocompleteFilterPlaceType[] | undefined;
}
export declare const AutocompleteIntendedUse: {
  readonly SINGLE_USE: "SingleUse";
};
export type AutocompleteIntendedUse =
  (typeof AutocompleteIntendedUse)[keyof typeof AutocompleteIntendedUse];
export declare const PostalCodeMode: {
  readonly ENUMERATE_SPANNED_LOCALITIES: "EnumerateSpannedLocalities";
  readonly MERGE_ALL_SPANNED_LOCALITIES: "MergeAllSpannedLocalities";
};
export type PostalCodeMode =
  (typeof PostalCodeMode)[keyof typeof PostalCodeMode];
export interface AutocompleteRequest {
  QueryText: string | undefined;
  MaxResults?: number | undefined;
  BiasPosition?: number[] | undefined;
  Filter?: AutocompleteFilter | undefined;
  PostalCodeMode?: PostalCodeMode | undefined;
  AdditionalFeatures?: AutocompleteAdditionalFeature[] | undefined;
  Language?: string | undefined;
  PoliticalView?: string | undefined;
  IntendedUse?: AutocompleteIntendedUse | undefined;
  Key?: string | undefined;
}
export interface Highlight {
  StartIndex?: number | undefined;
  EndIndex?: number | undefined;
  Value?: string | undefined;
}
export interface CountryHighlights {
  Code?: Highlight[] | undefined;
  Name?: Highlight[] | undefined;
}
export interface RegionHighlights {
  Code?: Highlight[] | undefined;
  Name?: Highlight[] | undefined;
}
export interface SubRegionHighlights {
  Code?: Highlight[] | undefined;
  Name?: Highlight[] | undefined;
}
export interface AutocompleteAddressHighlights {
  Label?: Highlight[] | undefined;
  Country?: CountryHighlights | undefined;
  Region?: RegionHighlights | undefined;
  SubRegion?: SubRegionHighlights | undefined;
  Locality?: Highlight[] | undefined;
  District?: Highlight[] | undefined;
  SubDistrict?: Highlight[] | undefined;
  Street?: Highlight[] | undefined;
  Block?: Highlight[] | undefined;
  SubBlock?: Highlight[] | undefined;
  Intersection?: Highlight[][] | undefined;
  PostalCode?: Highlight[] | undefined;
  AddressNumber?: Highlight[] | undefined;
  Building?: Highlight[] | undefined;
}
export interface AutocompleteHighlights {
  Title?: Highlight[] | undefined;
  Address?: AutocompleteAddressHighlights | undefined;
}
export declare const PlaceType: {
  readonly BLOCK: "Block";
  readonly COUNTRY: "Country";
  readonly DISTRICT: "District";
  readonly INTERPOLATED_ADDRESS: "InterpolatedAddress";
  readonly INTERSECTION: "Intersection";
  readonly LOCALITY: "Locality";
  readonly POINT_ADDRESS: "PointAddress";
  readonly POINT_OF_INTEREST: "PointOfInterest";
  readonly POSTAL_CODE: "PostalCode";
  readonly REGION: "Region";
  readonly SECONDARY_ADDRESS: "SecondaryAddress";
  readonly STREET: "Street";
  readonly SUB_BLOCK: "SubBlock";
  readonly SUB_DISTRICT: "SubDistrict";
  readonly SUB_REGION: "SubRegion";
};
export type PlaceType = (typeof PlaceType)[keyof typeof PlaceType];
export interface AutocompleteResultItem {
  PlaceId: string | undefined;
  PlaceType: PlaceType | undefined;
  Title: string | undefined;
  Address?: Address | undefined;
  Distance?: number | undefined;
  Language?: string | undefined;
  PoliticalView?: string | undefined;
  Highlights?: AutocompleteHighlights | undefined;
}
export interface AutocompleteResponse {
  PricingBucket: string | undefined;
  ResultItems?: AutocompleteResultItem[] | undefined;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  $retryable: {};
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  $retryable: {};
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface ValidationExceptionField {
  Name: string | undefined;
  Message: string | undefined;
}
export declare const ValidationExceptionReason: {
  readonly CANNOT_PARSE: "CannotParse";
  readonly FIELD_VALIDATION_FAILED: "FieldValidationFailed";
  readonly MISSING: "Missing";
  readonly OTHER: "Other";
  readonly UNKNOWN_FIELD: "UnknownField";
  readonly UNKNOWN_OPERATION: "UnknownOperation";
};
export type ValidationExceptionReason =
  (typeof ValidationExceptionReason)[keyof typeof ValidationExceptionReason];
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message: string | undefined;
  Reason: ValidationExceptionReason | undefined;
  FieldList: ValidationExceptionField[] | undefined;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface BusinessChain {
  Name?: string | undefined;
  Id?: string | undefined;
}
export interface ComponentMatchScores {
  Title?: number | undefined;
  Address?: AddressComponentMatchScores | undefined;
}
export interface ContactDetails {
  Label?: string | undefined;
  Value?: string | undefined;
  Categories?: Category[] | undefined;
}
export interface Contacts {
  Phones?: ContactDetails[] | undefined;
  Faxes?: ContactDetails[] | undefined;
  Websites?: ContactDetails[] | undefined;
  Emails?: ContactDetails[] | undefined;
}
export interface FoodType {
  LocalizedName: string | undefined;
  Id?: string | undefined;
  Primary?: boolean | undefined;
}
export declare const GeocodeAdditionalFeature: {
  readonly ACCESS: "Access";
  readonly INTERSECTIONS: "Intersections";
  readonly SECONDARY_ADDRESSES: "SecondaryAddresses";
  readonly TIME_ZONE: "TimeZone";
};
export type GeocodeAdditionalFeature =
  (typeof GeocodeAdditionalFeature)[keyof typeof GeocodeAdditionalFeature];
export declare const GeocodeFilterPlaceType: {
  readonly INTERPOLATED_ADDRESS: "InterpolatedAddress";
  readonly INTERSECTION: "Intersection";
  readonly LOCALITY: "Locality";
  readonly POINT_ADDRESS: "PointAddress";
  readonly POSTAL_CODE: "PostalCode";
  readonly STREET: "Street";
};
export type GeocodeFilterPlaceType =
  (typeof GeocodeFilterPlaceType)[keyof typeof GeocodeFilterPlaceType];
export interface GeocodeFilter {
  IncludeCountries?: string[] | undefined;
  IncludePlaceTypes?: GeocodeFilterPlaceType[] | undefined;
}
export declare const GeocodeIntendedUse: {
  readonly SINGLE_USE: "SingleUse";
  readonly STORAGE: "Storage";
};
export type GeocodeIntendedUse =
  (typeof GeocodeIntendedUse)[keyof typeof GeocodeIntendedUse];
export interface GeocodeQueryComponents {
  Country?: string | undefined;
  Region?: string | undefined;
  SubRegion?: string | undefined;
  Locality?: string | undefined;
  District?: string | undefined;
  Street?: string | undefined;
  AddressNumber?: string | undefined;
  PostalCode?: string | undefined;
}
export interface GeocodeRequest {
  QueryText?: string | undefined;
  QueryComponents?: GeocodeQueryComponents | undefined;
  MaxResults?: number | undefined;
  BiasPosition?: number[] | undefined;
  Filter?: GeocodeFilter | undefined;
  AdditionalFeatures?: GeocodeAdditionalFeature[] | undefined;
  Language?: string | undefined;
  PoliticalView?: string | undefined;
  IntendedUse?: GeocodeIntendedUse | undefined;
  Key?: string | undefined;
}
export interface Intersection {
  PlaceId: string | undefined;
  Title: string | undefined;
  Address?: Address | undefined;
  Position?: number[] | undefined;
  Distance?: number | undefined;
  RouteDistance?: number | undefined;
  MapView?: number[] | undefined;
  AccessPoints?: AccessPoint[] | undefined;
}
export interface RelatedPlace {
  PlaceId: string | undefined;
  PlaceType: PlaceType | undefined;
  Title: string | undefined;
  Address?: Address | undefined;
  Position?: number[] | undefined;
  AccessPoints?: AccessPoint[] | undefined;
}
export interface MatchScoreDetails {
  Overall?: number | undefined;
  Components?: ComponentMatchScores | undefined;
}
export interface ParsedQueryComponent {
  StartIndex?: number | undefined;
  EndIndex?: number | undefined;
  Value?: string | undefined;
  QueryComponent?: string | undefined;
}
export interface ParsedQuerySecondaryAddressComponent {
  StartIndex: number | undefined;
  EndIndex: number | undefined;
  Value: string | undefined;
  Number: string | undefined;
  Designator: string | undefined;
}
export interface GeocodeParsedQueryAddressComponents {
  Country?: ParsedQueryComponent[] | undefined;
  Region?: ParsedQueryComponent[] | undefined;
  SubRegion?: ParsedQueryComponent[] | undefined;
  Locality?: ParsedQueryComponent[] | undefined;
  District?: ParsedQueryComponent[] | undefined;
  SubDistrict?: ParsedQueryComponent[] | undefined;
  PostalCode?: ParsedQueryComponent[] | undefined;
  Block?: ParsedQueryComponent[] | undefined;
  SubBlock?: ParsedQueryComponent[] | undefined;
  Street?: ParsedQueryComponent[] | undefined;
  AddressNumber?: ParsedQueryComponent[] | undefined;
  Building?: ParsedQueryComponent[] | undefined;
  SecondaryAddressComponents?:
    | ParsedQuerySecondaryAddressComponent[]
    | undefined;
}
export interface GeocodeParsedQuery {
  Title?: ParsedQueryComponent[] | undefined;
  Address?: GeocodeParsedQueryAddressComponents | undefined;
}
export declare const PostalAuthority: {
  readonly USPS: "Usps";
};
export type PostalAuthority =
  (typeof PostalAuthority)[keyof typeof PostalAuthority];
export declare const PostalCodeType: {
  readonly USPS_ZIP: "UspsZip";
  readonly USPS_ZIP_PLUS_4: "UspsZipPlus4";
};
export type PostalCodeType =
  (typeof PostalCodeType)[keyof typeof PostalCodeType];
export declare const ZipClassificationCode: {
  readonly MILITARY: "Military";
  readonly POST_OFFICE_BOXES: "PostOfficeBoxes";
  readonly UNIQUE: "Unique";
};
export type ZipClassificationCode =
  (typeof ZipClassificationCode)[keyof typeof ZipClassificationCode];
export interface UspsZip {
  ZipClassificationCode?: ZipClassificationCode | undefined;
}
export declare const RecordTypeCode: {
  readonly FIRM: "Firm";
  readonly GENERAL: "General";
  readonly HIGH_RISE: "HighRise";
  readonly POST_OFFICE_BOX: "PostOfficeBox";
  readonly RURAL: "Rural";
  readonly STREET: "Street";
};
export type RecordTypeCode =
  (typeof RecordTypeCode)[keyof typeof RecordTypeCode];
export interface UspsZipPlus4 {
  RecordTypeCode?: RecordTypeCode | undefined;
}
export interface PostalCodeDetails {
  PostalCode?: string | undefined;
  PostalAuthority?: PostalAuthority | undefined;
  PostalCodeType?: PostalCodeType | undefined;
  UspsZip?: UspsZip | undefined;
  UspsZipPlus4?: UspsZipPlus4 | undefined;
}
export interface TimeZone {
  Name: string | undefined;
  Offset?: string | undefined;
  OffsetSeconds?: number | undefined;
}
export interface GeocodeResultItem {
  PlaceId: string | undefined;
  PlaceType: PlaceType | undefined;
  Title: string | undefined;
  Address?: Address | undefined;
  AddressNumberCorrected?: boolean | undefined;
  PostalCodeDetails?: PostalCodeDetails[] | undefined;
  Position?: number[] | undefined;
  Distance?: number | undefined;
  MapView?: number[] | undefined;
  Categories?: Category[] | undefined;
  FoodTypes?: FoodType[] | undefined;
  AccessPoints?: AccessPoint[] | undefined;
  TimeZone?: TimeZone | undefined;
  PoliticalView?: string | undefined;
  MatchScores?: MatchScoreDetails | undefined;
  ParsedQuery?: GeocodeParsedQuery | undefined;
  Intersections?: Intersection[] | undefined;
  MainAddress?: RelatedPlace | undefined;
  SecondaryAddresses?: RelatedPlace[] | undefined;
}
export interface GeocodeResponse {
  PricingBucket: string | undefined;
  ResultItems?: GeocodeResultItem[] | undefined;
}
export declare const GetPlaceAdditionalFeature: {
  readonly ACCESS: "Access";
  readonly CONTACT: "Contact";
  readonly PHONEMES: "Phonemes";
  readonly SECONDARY_ADDRESSES: "SecondaryAddresses";
  readonly TIME_ZONE: "TimeZone";
};
export type GetPlaceAdditionalFeature =
  (typeof GetPlaceAdditionalFeature)[keyof typeof GetPlaceAdditionalFeature];
export declare const GetPlaceIntendedUse: {
  readonly SINGLE_USE: "SingleUse";
  readonly STORAGE: "Storage";
};
export type GetPlaceIntendedUse =
  (typeof GetPlaceIntendedUse)[keyof typeof GetPlaceIntendedUse];
export interface GetPlaceRequest {
  PlaceId: string | undefined;
  AdditionalFeatures?: GetPlaceAdditionalFeature[] | undefined;
  Language?: string | undefined;
  PoliticalView?: string | undefined;
  IntendedUse?: GetPlaceIntendedUse | undefined;
  Key?: string | undefined;
}
export interface OpeningHoursComponents {
  OpenTime?: string | undefined;
  OpenDuration?: string | undefined;
  Recurrence?: string | undefined;
}
export interface OpeningHours {
  Display?: string[] | undefined;
  OpenNow?: boolean | undefined;
  Components?: OpeningHoursComponents[] | undefined;
  Categories?: Category[] | undefined;
}
export interface PhonemeDetails {
  Title?: PhonemeTranscription[] | undefined;
  Address?: AddressComponentPhonemes | undefined;
}
export interface GetPlaceResponse {
  PlaceId: string | undefined;
  PlaceType: PlaceType | undefined;
  Title: string | undefined;
  PricingBucket: string | undefined;
  Address?: Address | undefined;
  AddressNumberCorrected?: boolean | undefined;
  PostalCodeDetails?: PostalCodeDetails[] | undefined;
  Position?: number[] | undefined;
  MapView?: number[] | undefined;
  Categories?: Category[] | undefined;
  FoodTypes?: FoodType[] | undefined;
  BusinessChains?: BusinessChain[] | undefined;
  Contacts?: Contacts | undefined;
  OpeningHours?: OpeningHours[] | undefined;
  AccessPoints?: AccessPoint[] | undefined;
  AccessRestrictions?: AccessRestriction[] | undefined;
  TimeZone?: TimeZone | undefined;
  PoliticalView?: string | undefined;
  Phonemes?: PhonemeDetails | undefined;
  MainAddress?: RelatedPlace | undefined;
  SecondaryAddresses?: RelatedPlace[] | undefined;
}
export declare const ReverseGeocodeAdditionalFeature: {
  readonly ACCESS: "Access";
  readonly INTERSECTIONS: "Intersections";
  readonly TIME_ZONE: "TimeZone";
};
export type ReverseGeocodeAdditionalFeature =
  (typeof ReverseGeocodeAdditionalFeature)[keyof typeof ReverseGeocodeAdditionalFeature];
export declare const ReverseGeocodeFilterPlaceType: {
  readonly INTERPOLATED_ADDRESS: "InterpolatedAddress";
  readonly INTERSECTION: "Intersection";
  readonly LOCALITY: "Locality";
  readonly POINT_ADDRESS: "PointAddress";
  readonly STREET: "Street";
};
export type ReverseGeocodeFilterPlaceType =
  (typeof ReverseGeocodeFilterPlaceType)[keyof typeof ReverseGeocodeFilterPlaceType];
export interface ReverseGeocodeFilter {
  IncludePlaceTypes?: ReverseGeocodeFilterPlaceType[] | undefined;
}
export declare const ReverseGeocodeIntendedUse: {
  readonly SINGLE_USE: "SingleUse";
  readonly STORAGE: "Storage";
};
export type ReverseGeocodeIntendedUse =
  (typeof ReverseGeocodeIntendedUse)[keyof typeof ReverseGeocodeIntendedUse];
export interface ReverseGeocodeRequest {
  QueryPosition: number[] | undefined;
  QueryRadius?: number | undefined;
  MaxResults?: number | undefined;
  Filter?: ReverseGeocodeFilter | undefined;
  AdditionalFeatures?: ReverseGeocodeAdditionalFeature[] | undefined;
  Language?: string | undefined;
  PoliticalView?: string | undefined;
  IntendedUse?: ReverseGeocodeIntendedUse | undefined;
  Key?: string | undefined;
}
export interface ReverseGeocodeResultItem {
  PlaceId: string | undefined;
  PlaceType: PlaceType | undefined;
  Title: string | undefined;
  Address?: Address | undefined;
  AddressNumberCorrected?: boolean | undefined;
  PostalCodeDetails?: PostalCodeDetails[] | undefined;
  Position?: number[] | undefined;
  Distance?: number | undefined;
  MapView?: number[] | undefined;
  Categories?: Category[] | undefined;
  FoodTypes?: FoodType[] | undefined;
  AccessPoints?: AccessPoint[] | undefined;
  TimeZone?: TimeZone | undefined;
  PoliticalView?: string | undefined;
  Intersections?: Intersection[] | undefined;
}
export interface ReverseGeocodeResponse {
  PricingBucket: string | undefined;
  ResultItems?: ReverseGeocodeResultItem[] | undefined;
}
export declare const SearchNearbyAdditionalFeature: {
  readonly ACCESS: "Access";
  readonly CONTACT: "Contact";
  readonly PHONEMES: "Phonemes";
  readonly TIME_ZONE: "TimeZone";
};
export type SearchNearbyAdditionalFeature =
  (typeof SearchNearbyAdditionalFeature)[keyof typeof SearchNearbyAdditionalFeature];
export interface SearchNearbyFilter {
  BoundingBox?: number[] | undefined;
  IncludeCountries?: string[] | undefined;
  IncludeCategories?: string[] | undefined;
  ExcludeCategories?: string[] | undefined;
  IncludeBusinessChains?: string[] | undefined;
  ExcludeBusinessChains?: string[] | undefined;
  IncludeFoodTypes?: string[] | undefined;
  ExcludeFoodTypes?: string[] | undefined;
}
export declare const SearchNearbyIntendedUse: {
  readonly SINGLE_USE: "SingleUse";
  readonly STORAGE: "Storage";
};
export type SearchNearbyIntendedUse =
  (typeof SearchNearbyIntendedUse)[keyof typeof SearchNearbyIntendedUse];
export interface SearchNearbyRequest {
  QueryPosition: number[] | undefined;
  QueryRadius?: number | undefined;
  MaxResults?: number | undefined;
  Filter?: SearchNearbyFilter | undefined;
  AdditionalFeatures?: SearchNearbyAdditionalFeature[] | undefined;
  Language?: string | undefined;
  PoliticalView?: string | undefined;
  IntendedUse?: SearchNearbyIntendedUse | undefined;
  NextToken?: string | undefined;
  Key?: string | undefined;
}
export interface SearchNearbyResultItem {
  PlaceId: string | undefined;
  PlaceType: PlaceType | undefined;
  Title: string | undefined;
  Address?: Address | undefined;
  AddressNumberCorrected?: boolean | undefined;
  Position?: number[] | undefined;
  Distance?: number | undefined;
  MapView?: number[] | undefined;
  Categories?: Category[] | undefined;
  FoodTypes?: FoodType[] | undefined;
  BusinessChains?: BusinessChain[] | undefined;
  Contacts?: Contacts | undefined;
  OpeningHours?: OpeningHours[] | undefined;
  AccessPoints?: AccessPoint[] | undefined;
  AccessRestrictions?: AccessRestriction[] | undefined;
  TimeZone?: TimeZone | undefined;
  PoliticalView?: string | undefined;
  Phonemes?: PhonemeDetails | undefined;
}
export interface SearchNearbyResponse {
  PricingBucket: string | undefined;
  ResultItems?: SearchNearbyResultItem[] | undefined;
  NextToken?: string | undefined;
}
export declare const SearchTextAdditionalFeature: {
  readonly ACCESS: "Access";
  readonly CONTACT: "Contact";
  readonly PHONEMES: "Phonemes";
  readonly TIME_ZONE: "TimeZone";
};
export type SearchTextAdditionalFeature =
  (typeof SearchTextAdditionalFeature)[keyof typeof SearchTextAdditionalFeature];
export interface SearchTextFilter {
  BoundingBox?: number[] | undefined;
  Circle?: FilterCircle | undefined;
  IncludeCountries?: string[] | undefined;
}
export declare const SearchTextIntendedUse: {
  readonly SINGLE_USE: "SingleUse";
  readonly STORAGE: "Storage";
};
export type SearchTextIntendedUse =
  (typeof SearchTextIntendedUse)[keyof typeof SearchTextIntendedUse];
export interface SearchTextRequest {
  QueryText?: string | undefined;
  QueryId?: string | undefined;
  MaxResults?: number | undefined;
  BiasPosition?: number[] | undefined;
  Filter?: SearchTextFilter | undefined;
  AdditionalFeatures?: SearchTextAdditionalFeature[] | undefined;
  Language?: string | undefined;
  PoliticalView?: string | undefined;
  IntendedUse?: SearchTextIntendedUse | undefined;
  NextToken?: string | undefined;
  Key?: string | undefined;
}
export interface SearchTextResultItem {
  PlaceId: string | undefined;
  PlaceType: PlaceType | undefined;
  Title: string | undefined;
  Address?: Address | undefined;
  AddressNumberCorrected?: boolean | undefined;
  Position?: number[] | undefined;
  Distance?: number | undefined;
  MapView?: number[] | undefined;
  Categories?: Category[] | undefined;
  FoodTypes?: FoodType[] | undefined;
  BusinessChains?: BusinessChain[] | undefined;
  Contacts?: Contacts | undefined;
  OpeningHours?: OpeningHours[] | undefined;
  AccessPoints?: AccessPoint[] | undefined;
  AccessRestrictions?: AccessRestriction[] | undefined;
  TimeZone?: TimeZone | undefined;
  PoliticalView?: string | undefined;
  Phonemes?: PhonemeDetails | undefined;
}
export interface SearchTextResponse {
  PricingBucket: string | undefined;
  ResultItems?: SearchTextResultItem[] | undefined;
  NextToken?: string | undefined;
}
export declare const SuggestAdditionalFeature: {
  readonly ACCESS: "Access";
  readonly CORE: "Core";
  readonly PHONEMES: "Phonemes";
  readonly TIME_ZONE: "TimeZone";
};
export type SuggestAdditionalFeature =
  (typeof SuggestAdditionalFeature)[keyof typeof SuggestAdditionalFeature];
export interface SuggestFilter {
  BoundingBox?: number[] | undefined;
  Circle?: FilterCircle | undefined;
  IncludeCountries?: string[] | undefined;
}
export declare const SuggestIntendedUse: {
  readonly SINGLE_USE: "SingleUse";
};
export type SuggestIntendedUse =
  (typeof SuggestIntendedUse)[keyof typeof SuggestIntendedUse];
export interface SuggestRequest {
  QueryText: string | undefined;
  MaxResults?: number | undefined;
  MaxQueryRefinements?: number | undefined;
  BiasPosition?: number[] | undefined;
  Filter?: SuggestFilter | undefined;
  AdditionalFeatures?: SuggestAdditionalFeature[] | undefined;
  Language?: string | undefined;
  PoliticalView?: string | undefined;
  IntendedUse?: SuggestIntendedUse | undefined;
  Key?: string | undefined;
}
export interface QueryRefinement {
  RefinedTerm: string | undefined;
  OriginalTerm: string | undefined;
  StartIndex: number | undefined;
  EndIndex: number | undefined;
}
export interface SuggestAddressHighlights {
  Label?: Highlight[] | undefined;
}
export interface SuggestHighlights {
  Title?: Highlight[] | undefined;
  Address?: SuggestAddressHighlights | undefined;
}
export interface SuggestPlaceResult {
  PlaceId?: string | undefined;
  PlaceType?: PlaceType | undefined;
  Address?: Address | undefined;
  Position?: number[] | undefined;
  Distance?: number | undefined;
  MapView?: number[] | undefined;
  Categories?: Category[] | undefined;
  FoodTypes?: FoodType[] | undefined;
  BusinessChains?: BusinessChain[] | undefined;
  AccessPoints?: AccessPoint[] | undefined;
  AccessRestrictions?: AccessRestriction[] | undefined;
  TimeZone?: TimeZone | undefined;
  PoliticalView?: string | undefined;
  Phonemes?: PhonemeDetails | undefined;
}
export declare const QueryType: {
  readonly BUSINESS_CHAIN: "BusinessChain";
  readonly CATEGORY: "Category";
};
export type QueryType = (typeof QueryType)[keyof typeof QueryType];
export interface SuggestQueryResult {
  QueryId?: string | undefined;
  QueryType?: QueryType | undefined;
}
export declare const SuggestResultItemType: {
  readonly PLACE: "Place";
  readonly QUERY: "Query";
};
export type SuggestResultItemType =
  (typeof SuggestResultItemType)[keyof typeof SuggestResultItemType];
export interface SuggestResultItem {
  Title: string | undefined;
  SuggestResultItemType: SuggestResultItemType | undefined;
  Place?: SuggestPlaceResult | undefined;
  Query?: SuggestQueryResult | undefined;
  Highlights?: SuggestHighlights | undefined;
}
export interface SuggestResponse {
  PricingBucket: string | undefined;
  ResultItems?: SuggestResultItem[] | undefined;
  QueryRefinements?: QueryRefinement[] | undefined;
}
export declare const AccessPointFilterSensitiveLog: (obj: AccessPoint) => any;
export declare const CategoryFilterSensitiveLog: (obj: Category) => any;
export declare const AccessRestrictionFilterSensitiveLog: (
  obj: AccessRestriction
) => any;
export declare const CountryFilterSensitiveLog: (obj: Country) => any;
export declare const RegionFilterSensitiveLog: (obj: Region) => any;
export declare const SecondaryAddressComponentFilterSensitiveLog: (
  obj: SecondaryAddressComponent
) => any;
export declare const StreetComponentsFilterSensitiveLog: (
  obj: StreetComponents
) => any;
export declare const SubRegionFilterSensitiveLog: (obj: SubRegion) => any;
export declare const AddressFilterSensitiveLog: (obj: Address) => any;
export declare const PhonemeTranscriptionFilterSensitiveLog: (
  obj: PhonemeTranscription
) => any;
export declare const AddressComponentPhonemesFilterSensitiveLog: (
  obj: AddressComponentPhonemes
) => any;
export declare const FilterCircleFilterSensitiveLog: (obj: FilterCircle) => any;
export declare const AutocompleteFilterFilterSensitiveLog: (
  obj: AutocompleteFilter
) => any;
export declare const AutocompleteRequestFilterSensitiveLog: (
  obj: AutocompleteRequest
) => any;
export declare const HighlightFilterSensitiveLog: (obj: Highlight) => any;
export declare const CountryHighlightsFilterSensitiveLog: (
  obj: CountryHighlights
) => any;
export declare const RegionHighlightsFilterSensitiveLog: (
  obj: RegionHighlights
) => any;
export declare const SubRegionHighlightsFilterSensitiveLog: (
  obj: SubRegionHighlights
) => any;
export declare const AutocompleteAddressHighlightsFilterSensitiveLog: (
  obj: AutocompleteAddressHighlights
) => any;
export declare const AutocompleteHighlightsFilterSensitiveLog: (
  obj: AutocompleteHighlights
) => any;
export declare const AutocompleteResultItemFilterSensitiveLog: (
  obj: AutocompleteResultItem
) => any;
export declare const AutocompleteResponseFilterSensitiveLog: (
  obj: AutocompleteResponse
) => any;
export declare const BusinessChainFilterSensitiveLog: (
  obj: BusinessChain
) => any;
export declare const ContactDetailsFilterSensitiveLog: (
  obj: ContactDetails
) => any;
export declare const ContactsFilterSensitiveLog: (obj: Contacts) => any;
export declare const FoodTypeFilterSensitiveLog: (obj: FoodType) => any;
export declare const GeocodeFilterFilterSensitiveLog: (
  obj: GeocodeFilter
) => any;
export declare const GeocodeQueryComponentsFilterSensitiveLog: (
  obj: GeocodeQueryComponents
) => any;
export declare const GeocodeRequestFilterSensitiveLog: (
  obj: GeocodeRequest
) => any;
export declare const IntersectionFilterSensitiveLog: (obj: Intersection) => any;
export declare const RelatedPlaceFilterSensitiveLog: (obj: RelatedPlace) => any;
export declare const ParsedQueryComponentFilterSensitiveLog: (
  obj: ParsedQueryComponent
) => any;
export declare const ParsedQuerySecondaryAddressComponentFilterSensitiveLog: (
  obj: ParsedQuerySecondaryAddressComponent
) => any;
export declare const GeocodeParsedQueryAddressComponentsFilterSensitiveLog: (
  obj: GeocodeParsedQueryAddressComponents
) => any;
export declare const GeocodeParsedQueryFilterSensitiveLog: (
  obj: GeocodeParsedQuery
) => any;
export declare const UspsZipFilterSensitiveLog: (obj: UspsZip) => any;
export declare const UspsZipPlus4FilterSensitiveLog: (obj: UspsZipPlus4) => any;
export declare const PostalCodeDetailsFilterSensitiveLog: (
  obj: PostalCodeDetails
) => any;
export declare const TimeZoneFilterSensitiveLog: (obj: TimeZone) => any;
export declare const GeocodeResultItemFilterSensitiveLog: (
  obj: GeocodeResultItem
) => any;
export declare const GeocodeResponseFilterSensitiveLog: (
  obj: GeocodeResponse
) => any;
export declare const GetPlaceRequestFilterSensitiveLog: (
  obj: GetPlaceRequest
) => any;
export declare const OpeningHoursComponentsFilterSensitiveLog: (
  obj: OpeningHoursComponents
) => any;
export declare const OpeningHoursFilterSensitiveLog: (obj: OpeningHours) => any;
export declare const PhonemeDetailsFilterSensitiveLog: (
  obj: PhonemeDetails
) => any;
export declare const GetPlaceResponseFilterSensitiveLog: (
  obj: GetPlaceResponse
) => any;
export declare const ReverseGeocodeRequestFilterSensitiveLog: (
  obj: ReverseGeocodeRequest
) => any;
export declare const ReverseGeocodeResultItemFilterSensitiveLog: (
  obj: ReverseGeocodeResultItem
) => any;
export declare const ReverseGeocodeResponseFilterSensitiveLog: (
  obj: ReverseGeocodeResponse
) => any;
export declare const SearchNearbyFilterFilterSensitiveLog: (
  obj: SearchNearbyFilter
) => any;
export declare const SearchNearbyRequestFilterSensitiveLog: (
  obj: SearchNearbyRequest
) => any;
export declare const SearchNearbyResultItemFilterSensitiveLog: (
  obj: SearchNearbyResultItem
) => any;
export declare const SearchNearbyResponseFilterSensitiveLog: (
  obj: SearchNearbyResponse
) => any;
export declare const SearchTextFilterFilterSensitiveLog: (
  obj: SearchTextFilter
) => any;
export declare const SearchTextRequestFilterSensitiveLog: (
  obj: SearchTextRequest
) => any;
export declare const SearchTextResultItemFilterSensitiveLog: (
  obj: SearchTextResultItem
) => any;
export declare const SearchTextResponseFilterSensitiveLog: (
  obj: SearchTextResponse
) => any;
export declare const SuggestFilterFilterSensitiveLog: (
  obj: SuggestFilter
) => any;
export declare const SuggestRequestFilterSensitiveLog: (
  obj: SuggestRequest
) => any;
export declare const QueryRefinementFilterSensitiveLog: (
  obj: QueryRefinement
) => any;
export declare const SuggestAddressHighlightsFilterSensitiveLog: (
  obj: SuggestAddressHighlights
) => any;
export declare const SuggestHighlightsFilterSensitiveLog: (
  obj: SuggestHighlights
) => any;
export declare const SuggestPlaceResultFilterSensitiveLog: (
  obj: SuggestPlaceResult
) => any;
export declare const SuggestQueryResultFilterSensitiveLog: (
  obj: SuggestQueryResult
) => any;
export declare const SuggestResultItemFilterSensitiveLog: (
  obj: SuggestResultItem
) => any;
export declare const SuggestResponseFilterSensitiveLog: (
  obj: SuggestResponse
) => any;
